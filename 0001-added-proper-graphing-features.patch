From d4495bf72bf10366550d3ed8cf4604d82fb29726 Mon Sep 17 00:00:00 2001
From: Dimitrios Haralampopoulos <dimi.haralampopoulos@gmail.com>
Date: Mon, 25 Sep 2023 12:24:28 -0400
Subject: [PATCH] added proper graphing features

---
 src/App.tsx   | 18 +++++++++++++++---
 src/Graph.tsx | 13 +++++++++++--
 2 files changed, 26 insertions(+), 5 deletions(-)

diff --git a/src/App.tsx b/src/App.tsx
index 0728518..f559ad0 100755
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -8,6 +8,7 @@ import './App.css';
  */
 interface IState {
   data: ServerRespond[],
+  showGraph: boolean,
 }
 
 /**
@@ -22,6 +23,7 @@ class App extends Component<{}, IState> {
       // data saves the server responds.
       // We use this state to parse data down to the child element (Graph) as element property
       data: [],
+      showGraph: false
     };
   }
 
@@ -29,19 +31,29 @@ class App extends Component<{}, IState> {
    * Render Graph react component with state.data parse as property data
    */
   renderGraph() {
-    return (<Graph data={this.state.data}/>)
+    if (this.state.showGraph){
+      return (<Graph data={this.state.data}/>)
+    }
   }
 
   /**
    * Get new data from server and update the state with the new data
    */
   getDataFromServer() {
+    let itv = 0;
+    const interval = setInterval(() =>{
     DataStreamer.getData((serverResponds: ServerRespond[]) => {
       // Update the state by creating a new array of data that consists of
       // Previous data in the state and the new data from server
-      this.setState({ data: [...this.state.data, ...serverResponds] });
+      this.setState({ data: serverResponds, showGraph: true,
+      });
     });
-  }
+    itv++;
+    if (itv > 1000){
+      clearInterval(interval);
+    }
+  }, 100);
+}
 
   /**
    * Render the App react component
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 3b2a7da..e8a02f6 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -14,7 +14,7 @@ interface IProps {
  * Perspective library adds load to HTMLElement prototype.
  * This interface acts as a wrapper for Typescript compiler.
  */
-interface PerspectiveViewerElement {
+interface PerspectiveViewerElement extends HTMLElement {
   load: (table: Table) => void,
 }
 
@@ -32,7 +32,7 @@ class Graph extends Component<IProps, {}> {
 
   componentDidMount() {
     // Get element to attach the table from the DOM.
-    const elem: PerspectiveViewerElement = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+    const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
       stock: 'string',
@@ -49,6 +49,15 @@ class Graph extends Component<IProps, {}> {
 
       // Add more Perspective configurations here.
       elem.load(this.table);
+      elem.setAttribute('view', 'y_line');
+      elem.setAttribute('column-pivots', '["stock"]');
+      elem.setAttribute('row-pivots', '["timestamp"]');
+      elem.setAttribute('columns', '["top_ask_price"]');
+      elem.setAttribute('aggregates', 
+    `{"stock":"distinct count", 
+    "top_ask_price":"avg",
+    "top_bid_price":"avg",
+    "timestamp":"distinct count"}`)
     }
   }
 
-- 
2.38.0.windows.1

